using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityStandardAssets.CrossPlatformInput;

public class PlayerController : MonoBehaviour
{

    Rigidbody2D rbody;
    public float speed = 3.0f;

    float axisH = 0.0f;
    public float jump = 9.0f;

    public LayerMask groundLayer;

    bool onGround = false;
    bool goJump = false;

    Animator animator;

    public string stopAnime = "PlayerStop";
    public string moveAnime = "PlayerMove";
    public string jumpAnime = "PlayerJump";
    public string deadAnime = "PlayerOver";
    public string goalAnime = "PlayerGoal";


    string oldAnime = "";
    string nowAnime = "";

    public static string gameState = "playing";

    public int score = 0;
    bool isMoving = false;

    public GameObject BulletPrefab;
    public Transform ShotPoint;

    public float coolTime = 2f;
    float leftCoolTime;

    AudioSource Ad;

    public AudioClip bullet;
    public AudioClip Voice;
    // Start is called before the first frame update
    void Start()
    {
        rbody = this.GetComponent<Rigidbody2D>();

         Ad = GetComponent<AudioSource>();
        animator = GetComponent<Animator>();

        nowAnime = "stopAnime";
        oldAnime = "stopAnime";

        gameState = "playing";

        leftCoolTime = 0;
    }

    // Update is called once per frame
    void Update()
    {
        leftCoolTime -= Time.deltaTime;
        if (leftCoolTime <= 0)
        {
            if (Input.GetKeyDown(KeyCode.Z))
            {
                Shot();leftCoolTime = coolTime;
            }
        }
        if (gameState != "playing")
        {
            return;
        }

        if (isMoving == false)
        {
            axisH = Input.GetAxisRaw("Horizontal");
            
        }
        if (axisH > 0.0f)
        {
            transform.localScale = new Vector2(1, 1);


        }
        else if (axisH < 0.0f)
        {
            transform.localScale = new Vector2(-1, 1);

        }
        if (Input.GetButtonDown("Jump"))
        {
            Jump();
        }
        
    }


    void FixedUpdate()
    {
        if (gameState != "playing")
        {
            return;
        }

        onGround = Physics2D.Linecast(transform.position, transform.position - (transform.up * 2.0f), groundLayer);

        if (onGround || axisH != 0)
        {
            rbody.velocity = new Vector2(speed * axisH, rbody.velocity.y);
        }
        if (onGround && goJump)
        {
            Vector2 jumpPw = new Vector2(0, jump);
            rbody.AddForce(jumpPw, ForceMode2D.Impulse);
            goJump = false;
        }
        if (onGround)
        {
            if (axisH == 0)
            {
                nowAnime = stopAnime;
            }
            else
            {
                nowAnime = moveAnime;
            }
        }
        else
        {
            nowAnime = jumpAnime;
        }
        if (nowAnime != oldAnime)
        {
            oldAnime = nowAnime;
            animator.Play(nowAnime);
        }

    }

    public void Jump()
    {
        goJump = true;
    }

    public void Shot()
    {
        leftCoolTime -= Time.deltaTime;
        if (leftCoolTime <= 0)
        {
            animator.SetTrigger("Shot");
            AudioSource  soundPlayer = GetComponent<AudioSource>();
            if(soundPlayer !=null)
                {
                soundPlayer.PlayOneShot(bullet);
                soundPlayer.PlayOneShot(Voice );


            }
            Instantiate(BulletPrefab, ShotPoint.position, transform.rotation);
            leftCoolTime = coolTime;
        }

    }

    void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Goal")
        {
            Goal();
        }
        else if (collision.gameObject.tag == "Dead")
        {
            GameOver();
        }
        else if (collision.gameObject.tag == "ScoreItem")
        {
            ItemData item = collision.gameObject.GetComponent<ItemData>();

            score = item.value;

            Destroy(collision.gameObject);
        }
    }

    public void Goal()
    {
        animator.Play(goalAnime);

        gameState = "gameclear";

        GameStop();
    }

    public void GameOver()
    {
        animator.Play(deadAnime);

        gameState = "gameover";
        GameStop();

        GetComponent<CapsuleCollider2D>().enabled = false;

        rbody.AddForce(new Vector2(0, 5), ForceMode2D.Impulse);
    
        }

public void GameStop()
{
    Rigidbody2D rbody = GetComponent<Rigidbody2D>();

    rbody.velocity = new Vector2(0,0);
}

    public void SetAxis(float h, float v)
    {
        axisH = h;
        if(axisH == 0)
        {
            isMoving = false;
        }
        else 
        {
        isMoving = true;
        }
    }

}
